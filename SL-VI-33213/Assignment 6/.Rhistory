getwd()
install.packages("reshape2")
getwd()
setwd("~/Desktop/Assignment5/breastcancer/")
getwd()
getwd()
setwd("P:\TE_SEM_6\SL-VI-33213\Assignment 5\breastcancer")
getwd()
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
df
head(df)
#import dataset
df<-read.csv("BreastCancerWc.csv", header=FALSE)
head(df)
names(df)<-c("CodeNumber", "ClumpThickness", "CellSizeUniformity", "CellShapeUniformity", "MarginalAdhesion", "SingleEpithelialCellSize", "BareNuclei", "BlandChromatin", "NormalNucleoli", "Mitoses", "Class")
th 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
df$Class[df$Class==4] <- 1 # replace 4 with 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
head(df)
df
view(df)
View(df)
df$BareNuclei[df$BareNuclei=="?"]<-NA   #replacing ? by NA
View(df)
head(table(df$BareNuclei))
library(reshape2)
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
#import dataset
df<-read.csv("BreastCancerWc.csv", header=FALSE)
names(df)<-c("CodeNumber", "ClumpThickness", "CellSizeUniformity", "CellShapeUniformity", "MarginalAdhesion", "SingleEpithelialCellSize", "BareNuclei", "BlandChromatin", "NormalNucleoli", "Mitoses", "Class")
print(dim(df))     # print Dataframe dimensions
print(names(df))
df$Class[df$Class==4] <- 1 # replace 4 with 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
df$BareNuclei[df$BareNuclei=="?"]<-NA   #replacing ? by NA
head(table(df$BareNuclei))
df$BareNuclei[is.na(df$BareNuclei)]<-1  #replacing NA with 1
head(table(df$BareNuclei))
df$BareNuclei <- as.numeric(df$BareNuclei)
head(df)
# Subset of Dataframe
subset <- df[c("CodeNumber", "ClumpThickness", "CellSizeUniformity","Mitoses", "Class")]
head(subset)
# Conditional Subset of Dataframe
subset1<-df[c("CodeNumber", "ClumpThickness", "CellSizeUniformity", "SingleEpithelialCellSize", "BareNuclei","Mitoses", "Class")]
subset2<-subset(subset1,subset1$ClumpThickness>=7 & subset1$Mitoses==1 | subset1$Mitoses==2,select=c("CodeNumber","ClumpThickness", "Mitoses", "CellSizeUniformity", "SingleEpithelialCellSize", "Class"))
head(subset2)
# Merging Dataframe
mergedDF1<-merge(subsetdf,subset2df,by="CodeNumber")
head(mergedDF1)
mergedDF2<-merge(subsetdf,subset2df,by="ClumpThickness")
head(mergedDF2)
sortdf<-df[order(df$ClumpThickness, df$Mitoses),]       # Sorting Dataframe
head(sortdf)
transposedf = t(df)        #transpose
head(transposedf)
Data1<-melt(data=df,id=c("CodeNumber", "Class"))     # Melting
View(Data1)
Data2<-melt(data=df,id=c("CodeNumber", "Class"),measure=c("Mitoses"))
View(Data2)
Data<-dcast(data=Data1,CodeNumber+Class~variable,mean)     # Casting
View(Data)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
#import dataset
df<-read.csv("BreastCancerWc.csv", header=FALSE)
names(df)<-c("CodeNumber", "ClumpThickness", "CellSizeUniformity", "CellShapeUniformity", "MarginalAdhesion", "SingleEpithelialCellSize", "BareNuclei", "BlandChromatin", "NormalNucleoli", "Mitoses", "Class")
print(dim(df))     # print Dataframe dimensions
print(names(df))
df$Class[df$Class==4] <- 1 # replace 4 with 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
df$BareNuclei[df$BareNuclei=="?"]<-NA   #replacing ? by NA
head(table(df$BareNuclei))
df$BareNuclei[is.na(df$BareNuclei)]<-1  #replacing NA with 1
head(table(df$BareNuclei))
df$BareNuclei <- as.numeric(df$BareNuclei)
head(df)
# Subset of Dataframe
subset <- df[c("CodeNumber", "ClumpThickness", "CellSizeUniformity","Mitoses", "Class")]
head(subset)
# Conditional Subset of Dataframe
subset1<-df[c("CodeNumber", "ClumpThickness", "CellSizeUniformity", "SingleEpithelialCellSize", "BareNuclei","Mitoses", "Class")]
subset2<-subset(subset1,subset1$ClumpThickness>=7 & subset1$Mitoses==1 | subset1$Mitoses==2,select=c("CodeNumber","ClumpThickness", "Mitoses", "CellSizeUniformity", "SingleEpithelialCellSize", "Class"))
head(subset2)
# Merging Dataframe
mergedDF1<-merge(subset,subset2df,by="CodeNumber")
head(mergedDF1)
mergedDF2<-merge(subset,subset2df,by="ClumpThickness")
head(mergedDF2)
sortdf<-df[order(df$ClumpThickness, df$Mitoses),]       # Sorting Dataframe
head(sortdf)
transposedf = t(df)        #transpose
head(transposedf)
Data1<-melt(data=df,id=c("CodeNumber", "Class"))     # Melting
View(Data1)
Data2<-melt(data=df,id=c("CodeNumber", "Class"),measure=c("Mitoses"))
View(Data2)
Data<-dcast(data=Data1,CodeNumber+Class~variable,mean)     # Casting
View(Data)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
#import dataset
df<-read.csv("BreastCancerWc.csv", header=FALSE)
names(df)<-c("CodeNumber", "ClumpThickness", "CellSizeUniformity", "CellShapeUniformity", "MarginalAdhesion", "SingleEpithelialCellSize", "BareNuclei", "BlandChromatin", "NormalNucleoli", "Mitoses", "Class")
print(dim(df))     # print Dataframe dimensions
print(names(df))
df$Class[df$Class==4] <- 1 # replace 4 with 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
df$BareNuclei[df$BareNuclei=="?"]<-NA   #replacing ? by NA
head(table(df$BareNuclei))
df$BareNuclei[is.na(df$BareNuclei)]<-1  #replacing NA with 1
head(table(df$BareNuclei))
df$BareNuclei <- as.numeric(df$BareNuclei)
head(df)
# Subset of Dataframe
subset <- df[c("CodeNumber", "ClumpThickness", "CellSizeUniformity","Mitoses", "Class")]
head(subset)
# Conditional Subset of Dataframe
subset1<-df[c("CodeNumber", "ClumpThickness", "CellSizeUniformity", "SingleEpithelialCellSize", "BareNuclei","Mitoses", "Class")]
subset2<-subset(subset1,subset1$ClumpThickness>=7 & subset1$Mitoses==1 | subset1$Mitoses==2,select=c("CodeNumber","ClumpThickness", "Mitoses", "CellSizeUniformity", "SingleEpithelialCellSize", "Class"))
head(subset2)
# Merging Dataframe
merged1<-merge(subset,subset2,by="CodeNumber")
head(merged1)
merged2<-merge(subset,subset2,by="ClumpThickness")
head(merged2)
sortdf<-df[order(df$ClumpThickness, df$Mitoses),]       # Sorting Dataframe
head(sortdf)
transposedf = t(df)        #transpose
head(transposedf)
Data1<-melt(data=df,id=c("CodeNumber", "Class"))     # Melting
View(Data1)
Data2<-melt(data=df,id=c("CodeNumber", "Class"),measure=c("Mitoses"))
View(Data2)
Data<-dcast(data=Data1,CodeNumber+Class~variable,mean)     # Casting
View(Data)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
df<-read.csv("dataset_Facebook.csv",sep = ';')#import csv file
dim(df)         # View Dataframe
print(names(df))
head(df)
subset<-df[c("Page.total.likes","Type","Category","comment","like","share")]      # creating subset
head(subset)
subset1<-df[c("Page.total.likes","Type","Post.Month","Post.Weekday","Post.Hour","like","comment","share")]
head(subset1)
subset2<-subset(subset1,subset1$Type=="Photo" & subset1$Post.Month==12,select=c(Page.total.likes,Post.Weekday,like,comment,share))
head(subset2)
merged<-merge(subset,subset2,by="Page.total.likes")      #Merging of dataset
head(merged)
sortdf<-df[order(df$Page.total.likes),]         #Sort
print(sortdf)
transposedf = t(df)       #transpose
print(transposedf)
#Melt
meltData<-melt(data=df,id.vars="Lifetime.Engaged.Users",measure.vars=c("Total.Interactions"))
print(meltData)
castData<-acast(data=meltData,Lifetime.Engaged.Users~variable,mean)     #Cast
print(castData)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
df<-read.csv("dataset_Facebook.csv",sep = ';')#import csv file
dim(df)         # View Dataframe
print(names(df))
head(df)
subset<-df[c("Page.total.likes","Type","Category","comment","like","share")]      # creating subset
head(subset)
subset1<-df[c("Page.total.likes","Type","Post.Month","Post.Weekday","Post.Hour","like","comment","share")]
head(subset1)
subset2<-subset(subset1,subset1$Type=="Photo" & subset1$Post.Month==12,select=c(Page.total.likes,Post.Weekday,like,comment,share))
head(subset2)
merged<-merge(subset,subset2,by="Page.total.likes")      #Merging of dataset
head(merged)
sortdf<-df[order(df$Page.total.likes),]         #Sort
print(sortdf)
transposedf = t(df)       #transpose
print(transposedf)
#Melt
meltData<-melt(data=df,id.vars="Lifetime.Engaged.Users",measure.vars=c("Total.Interactions"))
print(meltData)
castData<-acast(data=meltData,Lifetime.Engaged.Users~variable,mean)     #Cast
print(castData)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\Facebook")
getwd()
df<-read.csv("dataset_Facebook.csv",sep = ';')#import csv file
dim(df)         # View Dataframe
print(names(df))
head(df)
subset<-df[c("Page.total.likes","Type","Category","comment","like","share")]      # creating subset
head(subset)
subset1<-df[c("Page.total.likes","Type","Post.Month","Post.Weekday","Post.Hour","like","comment","share")]
head(subset1)
subset2<-subset(subset1,subset1$Type=="Photo" & subset1$Post.Month==12,select=c(Page.total.likes,Post.Weekday,like,comment,share))
head(subset2)
merged<-merge(subset,subset2,by="Page.total.likes")      #Merging of dataset
head(merged)
sortdf<-df[order(df$Page.total.likes),]         #Sort
print(sortdf)
transposedf = t(df)       #transpose
print(transposedf)
#Melt
meltData<-melt(data=df,id.vars="Lifetime.Engaged.Users",measure.vars=c("Total.Interactions"))
print(meltData)
castData<-acast(data=meltData,Lifetime.Engaged.Users~variable,mean)     #Cast
print(castData)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\Facebook")
getwd()
df<-read.csv("dataset_Facebook.csv",sep = ';')#import csv file
dim(df)         # View Dataframe
print(names(df))
head(df)
subset<-df[c("Page.total.likes","Type","Category","comment","like","share")]      # creating subset
head(subset)
subset1<-df[c("Page.total.likes","Type","Post.Month","Post.Weekday","Post.Hour","like","comment","share")]
head(subset1)
subset2<-subset(subset1,subset1$Type=="Photo" & subset1$Post.Month==12,select=c(Page.total.likes,Post.Weekday,like,comment,share))
head(subset2)
merged<-merge(subset,subset2,by="Page.total.likes")      #Merging of dataset
head(merged)
sortdf<-df[order(df$Page.total.likes),]         #Sort
print(sortdf)
transposedf = t(df)       #transpose
print(transposedf)
#Melt
meltData<-melt(data=df,id.vars="Lifetime.Engaged.Users",measure.vars=c("Total.Interactions"))
print(meltData)
castData<-acast(data=meltData,Lifetime.Engaged.Users~variable,mean)     #Cast
print(castData)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\Facebook")
getwd()
df<-read.csv("dataset_Facebook.csv",sep = ';')#import csv file
dim(df)         # View Dataframe dimensions
print(names(df))
head(df)
subset<-df[c("Page.total.likes","Type","Category","comment","like","share")]      # creating subset
head(subset)
subset1<-df[c("Page.total.likes","Type","Post.Month","Post.Weekday","Post.Hour","like","comment","share")]
head(subset1)
subset2<-subset(subset1,subset1$Type=="Photo" & subset1$Post.Month==12,select=c(Page.total.likes,Post.Weekday,like,comment,share))
head(subset2)
merged<-merge(subset,subset2,by="Page.total.likes")      #Merging of dataset
head(head(merged))
sortdf<-df[order(df$Page.total.likes),]         #Sort
print(head(sortdf))
transposedf = t(df)       #transpose
print(head(transposedf))
#Melt
meltData<-melt(data=df,id.vars="Lifetime.Engaged.Users",measure.vars=c("Total.Interactions"))
print(head(meltData))
castData<-acast(data=meltData,Lifetime.Engaged.Users~variable,mean)     #Cast
print(head(castData))
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\Facebook")
getwd()
df<-read.csv("dataset_Facebook.csv",sep = ';')#import csv file
dim(df)         # View Dataframe dimensions
print(names(df))
head(df)
subset<-df[c("Page.total.likes","Type","Category","comment","like","share")]      # creating subset
head(subset)
subset1<-df[c("Page.total.likes","Type","Post.Month","Post.Weekday","Post.Hour","like","comment","share")]
head(subset1)
subset2<-subset(subset1,subset1$Type=="Photo" ,select=c(Page.total.likes,Post.Weekday,like,comment,share))
head(subset2)
merged<-merge(subset,subset2,by="Page.total.likes")      #Merging of dataset
head(head(merged))
sortdf<-df[order(df$Page.total.likes),]         #Sort
head(sortdf)
transposedf = t(df)       #transpose
head(transposedf)
#Melt
meltData<-melt(data=df,id.vars="Lifetime.Engaged.Users",measure.vars=c("Total.Interactions"))
head(meltData)
castData<-acast(data=meltData,Lifetime.Engaged.Users~variable,mean)     #Cast
head(castData)
install.packages(c("caret", "caTools", "dplyr", "e1071", "ggplot2", "Metrics", "randomForest"))
library("ggplot2")
library("dplyr")
library("Metrics")
library("caret")
library("randomForest")
library("e1071")
library("caTools")
install.packages(c("caret", "caTools", "dplyr", "e1071", "ggplot2", "Metrics", "randomForest"))
install.packages(c("caret", "caTools", "dplyr", "e1071", "ggplot2", "Metrics", "randomForest"))
df <- read.csv("AirQualityUCI.csv", header=TRUE, sep=",")
# Removing -200
df$CO.GT.[df$CO.GT.==-200] <- NA
df$C6H6.GT.[df$C6H6.GT.==-200] <- NA
getwd()
setwd("~/Desktop/Assignment6/AirQuality/")
getwd()
df <- read.csv("AirQualityUCI.csv", header=TRUE, sep=",")
# Removing -200
df$CO.GT.[df$CO.GT.==-200] <- NA
df$C6H6.GT.[df$C6H6.GT.==-200] <- NA
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\AirQuality/")
getwd()
df <- read.csv("AirQualityUCI.csv", header=TRUE, sep=",")
getwd()
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 6\\AirQuality/")
getwd()
df <- read.csv("AirQualityUCI.csv", header=TRUE, sep=",")
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 6")
getwd()
df <- read.csv("AirQualityUCI.csv", header=TRUE, sep=",")
# Removing -200
df$CO.GT.[df$CO.GT.==-200] <- NA
df$C6H6.GT.[df$C6H6.GT.==-200] <- NA
print(summary(df))
df[is.na(df)] <- NA
print(summary(df))
for(i in names(df)[c(3:15)]){
df[i][df[i]] = NA
}
for(i in names(df)[c(3:15)]){
dfMean[i][is.na(dfMean[i])] = mean(dfMean[[i]], na.rm=TRUE)
df[i][df[i]==-200] <- NA
}
# Filling NA with Mean
dfMean = df
for(i in names(df)[c(3:15)]){
dfMean[i][is.na(dfMean[i])] = mean(dfMean[[i]], na.rm=TRUE)
df[i][df[i]==-200] <- NA
}
print(summary(dfMean))
for(i in names(df)[c(3:15)]){
dfMean[i][is.na(dfMean[i])] = mean(dfMean[[i]], na.rm=TRUE)
df[i][df[i]==-200] <- NA
}
print(summary(df))
for(i in names(df)[c(3:15)]){
df[i][df[i]==-200] <- NA
}
print(summary(df))

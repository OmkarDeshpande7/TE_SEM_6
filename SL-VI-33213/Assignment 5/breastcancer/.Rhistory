wordcloud(mark_data,max.words = 200,min.freq = 1,colors=c("red","blues","green"),random.color = FALSE,random.order=TRUE)  #plotting wordcloud
wordcloud(mark_data,max.words = 200,min.freq = 1,colors=c("red","blues","green"),random.color = FALSE,random.order=TRUE)  #plotting wordcloud
wordcloud(mark_data,max.words = 200,min.freq = 1,colors=c("red","blues","green"),random.color = FALSE,random.order=TRUE)  #plotting wordcloud
wordcloud(mark_data,max.words = 200,min.freq = 1,random.color = FALSE,random.order=TRUE)  #plotting wordcloud
wordcloud(mark_data,max.words = 200,min.freq = 1,random.color = TRUE,random.order=TRUE)  #plotting wordcloud
wordcloud(mark_data,max.words = 200,min.freq = 1,random.color = TRUE,random.order=TRUE)  #plotting wordcloud
##Install Packages
#install.packages("tm")  # for text mining
#install.packages("SnowballC") # for text stemming
#install.packages("wordcloud") # word-cloud generator
#install.packages("RColorBrewer") # color palettes
##Load Require Library
library(tm)
library(SnowballC)
library(RColorBrewer)
library(wordcloud)
##Read the Data
mark_txt<-readLines("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 7\\MarkZukerberg.txt")
mark_data<-Corpus(VectorSource(mark_txt)) #getting corpus
mark_data<-tm_map(mark_data,tolower)  #make lower case
mark_data<-tm_map(mark_data,removeNumbers)  #removing the numbers
mark_data<-tm_map(mark_data,removeWords,stopwords("english"))   #removing stopwords
mark_data
mark_data<-tm_map(mark_data,removePunctuation)    #remove punctuation marks
mark_data<-tm_map(mark_data,stripWhitespace)      #strip white spaces
mark_data<-tm_map(mark_data,stemDocument)         #stem document
wordcloud(mark_data,max.words = 200,min.freq = 1,random.color = TRUE,random.order=TRUE)  #plotting wordcloud
##Install Packages
#install.packages("tm")  # for text mining
#install.packages("SnowballC") # for text stemming
#install.packages("wordcloud") # word-cloud generator
#install.packages("RColorBrewer") # color palettes
##Load Require Library
library(tm)
library(SnowballC)
library(RColorBrewer)
library(wordcloud)
##Read the Data
mark_txt<-readLines("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 7\\MarkZukerberg.txt")
mark_data<-Corpus(VectorSource(mark_txt)) #getting corpus
mark_data<-tm_map(mark_data,tolower)  #make lower case
mark_data<-tm_map(mark_data,removeNumbers)  #removing the numbers
mark_data<-tm_map(mark_data,removeWords,stopwords("english"))   #removing stopwords
mark_data
mark_data<-tm_map(mark_data,removePunctuation)    #remove punctuation marks
mark_data<-tm_map(mark_data,stripWhitespace)      #strip white spaces
mark_data<-tm_map(mark_data,stemDocument)         #stem document
wordcloud(mark_data,max.words = 200,min.freq = 1,random.color = TRUE,random.order=TRUE)  #plotting wordcloud
##Install Packages
#install.packages("tm")  # for text mining
#install.packages("SnowballC") # for text stemming
#install.packages("wordcloud") # word-cloud generator
#install.packages("RColorBrewer") # color palettes
##Load Require Library
library(tm)
library(SnowballC)
library(RColorBrewer)
library(wordcloud)
##Read the Data
mark_txt<-readLines("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 7\\MarkZukerberg.txt")
mark_data<-Corpus(VectorSource(mark_txt)) #getting corpus
mark_data<-tm_map(mark_data,tolower)  #make lower case
mark_data<-tm_map(mark_data,removeNumbers)  #removing the numbers
mark_data<-tm_map(mark_data,removeWords,stopwords("english"))   #removing stopwords
mark_data<-tm_map(mark_data,removePunctuation)    #remove punctuation marks
mark_data<-tm_map(mark_data,stripWhitespace)      #strip white spaces
mark_data<-tm_map(mark_data,stemDocument)         #stem document
wordcloud(mark_data,max.words = 200,min.freq = 1,random.color = TRUE,random.order=TRUE)  #plotting wordcloud
wordcloud(mark_data,max.words = 200,min.freq = 2,random.color = TRUE,random.order=TRUE)  #plotting wordcloud
wordcloud(mark_data,max.words = 200,min.freq = 0,random.color = TRUE,random.order=TRUE)  #plotting wordcloud
library(readxl)     #load library readxl
#importing preprocessed dataset
dataset <- read.csv("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 8\\new_air_1.csv")
View(dataset)
#stripchart for CO.GT. values
stripchart(dataset$CO.GT.[1:100],xlab="value",ylab="CO.GT.")
#stripchart for NOx.GT. values
stripchart(dataset$NOx.GT.[1:100],xlab="value",ylab="NOx.GT.")
plot(x = dataset$T[1:50],y= dataset$CO.GT.
plot(x = dataset$T[1:50],y= dataset$CO.GT.[1:50], col="blue",xlab = "temperature", ylab = "CO.GT.")
plot(x = dataset$T[1:50],y= dataset$CO.GT.[1:50], col="blue",xlab = "temperature", ylab = "CO.GT.")
barplot(dataset$CO.GT.[1:100],xlab = "TIME",ylab = "no of records")
barplot(dataset$CO.GT.[1:100],xlab = "TIME",ylab = "no of records")
hist(dataset$CO.GT.)     #Histogram
dotchart((dataset$CO.GT.[1:100]))   #Dotcharts
#boxplot
boxplot(dataset$T[1:500]) #Boxplot
plot(dataset$CO.GT.[1:500],dataset$C6H6.GT.[1:500])
cor(dataset$CO.GT.[1:500],dataset$C6H6.GT.[1:500])
plot(dataset$CO.GT.[1:500],dataset$C6H6.GT.[1:500], main="CO vs C6H6", xlab="CO(GT)", ylab="C6H6(GT)")
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)      #load library reshape2
#get working directory
getwd()
#set working directory
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
#import dataset without first line as header
df<-read.csv("BreastCancerWc.csv", header=FALSE)
#
names(df)<-c("CN", "CT", "CSiU", "CShU", "MA", "SECS", "BN", "BC", "NN", "Mitoses", "Class")
print(dim(df))     # print Dataframe dimensions
print(names(df))
df$Class[df$Class==4] <- 1 # replace 4 with 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
df$BN[df$BN=="?"]<-NA   #replacing ? by NA
head(table(df$BN))
df$BN[is.na(df$BN)]<-1  #replacing NA with 1
head(table(df$BN))
df$BN <- as.numeric(df$BN)
head(df)
# Subset of Dataframe
subset <- df[c("CN", "CT", "CSU","M", "Class")]
head(subset)
# Conditional Subset of Dataframe
subset1<-df[c("CN", "CT", "CSiU", "SECS", "BN","Mitoses", "Class")]
subset2<-subset(subset1,subset1$CT>=7 ,select=c("CN","CT", "Mitoses", "CSiU", "SECS", "Class"))
head(subset2)
# Merging Dataframe
merged1<-merge(subset,subset2,by="CN")
head(merged1)
merged2<-merge(subset,subset2,by="CT")
head(merged2)
sortdf<-df[order(df$CT, df$Mitoses),]       # Sorting Dataframe
head(sortdf)
transposedf = t(df)        #transpose
head(transposedf)
Data1<-melt(data=df[1:100],id=c("CN", "Class"))     # Melting
View(Data1)
Data2<-melt(data=df[1:100],id=c("CN", "Class"),measure=c("Mitoses"))
View(Data2)
Data<-dcast(data=Data1,CN+Class~variable,mean)     # Casting
View(Data)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)      #load library reshape2
#get working directory
getwd()
#set working directory
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
#import dataset without first line as header
df<-read.csv("BreastCancerWc.csv", header=FALSE)
#
names(df)<-c("CN", "CT", "CSiU", "CShU", "MA", "SECS", "BN", "BC", "NN", "Mitoses", "Class")
print(dim(df))     # print Dataframe dimensions
print(names(df))
df$Class[df$Class==4] <- 1 # replace 4 with 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
df$BN[df$BN=="?"]<-NA   #replacing ? by NA
head(table(df$BN))
df$BN[is.na(df$BN)]<-1  #replacing NA with 1
head(table(df$BN))
df$BN <- as.numeric(df$BN)
head(df)
# Subset of Dataframe
subset <- df[c("CN", "CT", "CSU","M", "Class")]
head(subset)
# Conditional Subset of Dataframe
subset1<-df[c("CN", "CT", "CSiU", "SECS", "BN","Mitoses", "Class")]
subset2<-subset(subset1,subset1$CT>=7 ,select=c("CN","CT", "Mitoses", "CSiU", "SECS", "Class"))
head(subset2)
# Merging Dataframe
merged1<-merge(subset,subset2,by="CN")
head(merged1)
merged2<-merge(subset,subset2,by="CT")
head(merged2)
sortdf<-df[order(df$CT, df$Mitoses),]       # Sorting Dataframe
head(sortdf)
transposedf = t(df)        #transpose
head(transposedf)
Data1<-melt(data=df[1:100],id=c("CN", "Class"))     # Melting
View(Data1)
Data2<-melt(data=df[1:100],id=c("CN", "Class"),measure=c("Mitoses"))
View(Data2)
Data<-dcast(data=Data1,CN+Class~variable,mean)     # Casting
View(Data)
# Merging Dataframe
merged1<-rbind(subset,subset2)
,by="CN"
# Merging Dataframe
merged1<-cbind(subset,subset2,by="CN")
# Merging Dataframe
merged1<-rbind(subset,subset2,by="CN")
# Merging Dataframe
merged1<-rbind(subset,subset2)
merged2<-cbind(subset,subset2,by="CT")
r
# Merging Dataframe
merged1<-rbind(subset,subset2,by="CN")
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)      #load library reshape2
#get working directory
getwd()
#set working directory
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
#import dataset without first line as header
df<-read.csv("BreastCancerWc.csv", header=FALSE)
#
names(df)<-c("CN", "CT", "CSiU", "CShU", "MA", "SECS", "BN", "BC", "NN", "Mitoses", "Class")
print(dim(df))     # print Dataframe dimensions
print(names(df))
df$Class[df$Class==4] <- 1 # replace 4 with 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
df$BN[df$BN=="?"]<-NA   #replacing ? by NA
head(table(df$BN))
df$BN[is.na(df$BN)]<-1  #replacing NA with 1
head(table(df$BN))
df$BN <- as.numeric(df$BN)
head(df)
# Subset of Dataframe
subset <- df[c("CN", "CT", "CSU","M", "Class")]
head(subset)
# Conditional Subset of Dataframe
subset1<-df[c("CN", "CT", "CSiU", "SECS", "BN","Mitoses", "Class")]
subset2<-subset(subset1,subset1$CT>=7 ,select=c("CN","CT", "Mitoses", "CSiU", "SECS", "Class"))
head(subset2)
# Merging Dataframe
merged1<-rbind(subset,subset2,by="CN")
head(merged1)
merged2<-merge(subset,subset2,by="CT")
head(merged2)
sortdf<-df[order(df$CT, df$Mitoses),]       # Sorting Dataframe
head(sortdf)
transposedf = t(df)        #transpose
head(transposedf)
Data1<-melt(data=df[1:100],id=c("CN", "Class"))     # Melting
View(Data1)
Data2<-melt(data=df[1:100],id=c("CN", "Class"),measure=c("Mitoses"))
View(Data2)
Data<-dcast(data=Data1,CN+Class~variable,mean)     # Casting
View(Data)
Data2<-melt(data=df,id=c("CN", "Class"),measure=c("Mitoses"))
View(Data2)
Data<-dcast(data=Data1,CN+Class~variable,mean)     # Casting
Data<-dcast(data=Data1,CN+Class~variable,mean)     # Casting
Data<-dcast(data=Data1$CN,CN+Class~variable,mean)     # Casting
Data<-dcast(data=Data1,CN+Class~variable,mean)     # Casting
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)      #load library reshape2
#get working directory
getwd()
#set working directory
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
#import dataset without first line as header
df<-read.csv("BreastCancerWc.csv", header=FALSE)
#
names(df)<-c("CN", "CT", "CSiU", "CShU", "MA", "SECS", "BN", "BC", "NN", "Mitoses", "Class")
print(dim(df))     # print Dataframe dimensions
print(names(df))
df$Class[df$Class==4] <- 1 # replace 4 with 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
df$BN[df$BN=="?"]<-NA   #replacing ? by NA
head(table(df$BN))
df$BN[is.na(df$BN)]<-1  #replacing NA with 1
head(table(df$BN))
df$BN <- as.numeric(df$BN)
head(df)
# Subset of Dataframe
subset <- df[c("CN", "CT", "CSU","M", "Class")]
head(subset)
# Conditional Subset of Dataframe
subset1<-df[c("CN", "CT", "CSiU", "SECS", "BN","Mitoses", "Class")]
subset2<-subset(subset1,subset1$CT>=7 ,select=c("CN","CT", "Mitoses", "CSiU", "SECS", "Class"))
head(subset2)
# Merging Dataframe
merged1<-rbind(subset,subset2,by="CN")
head(merged1)
merged2<-merge(subset,subset2,by="CT")
head(merged2)
sortdf<-df[order(df$CT, df$Mitoses),]       # Sorting Dataframe
head(sortdf)
transposedf = t(df)        #transpose
head(transposedf)
Data1<-melt(data=df,id=c("CN", "Class"))     # Melting
View(Data1)
Data2<-melt(data=df,id=c("CN", "Class"),measure=c("Mitoses"))
View(Data2)
Data<-dcast(data=Data1,CN+Class~variable,mean)     # Casting
View(Data)
# Merging Dataframe
merged1<-merge(subset,subset2,by="CN")
merged2<-merge(subset1,subset2,by="CT")
head(merged2)
# Merging Dataframe
merged1<-merge(subset1,subset2,by="CN")
dim(subset1)
dim(subset2)
dim(merged1)
dim(merged2)
dim(subset1)
dim(subset2)
dim(merged2)
print(names(df))    #print column names
head(table(df$BN))
df$BN[is.na(df$BN)]<-1  #replacing NA with 1
head(table(df$BN))
#import dataset without first line as header
df<-read.csv("BreastCancerWc.csv", header=FALSE)
View(df)
#assign names to columns
names(df)<-c("CN", "CT", "CSiU", "CShU", "MA", "SECS", "BN", "BC", "NN", "Mitoses", "Class")
print(dim(df))     # print Dataframe dimensions
print(names(df))    #print column names
View(df)
head(table(df$BN))
df$BN[df$BN=="?"]<-NA   #replacing ? by NA
head(table(df$BN))
df$BN[is.na(df$BN)]<-1  #replacing NA with 1
head(table(df$BN))
df$BN <- as.numeric(df$BN)
head(df)
# Subset of Dataframe
subset <- df[c("CN", "CT", "CSU","M", "Class")]
# Subset of Dataframe
subset <- df[c("CN", "CT", "CSU","Mitoses", "Class")]
# Subset of Dataframe
subset <- df[c("CN", "CT", "CSiU","Mitoses", "Class")]
head(subset)
# Conditional Subset of Dataframe
subset1<-df[c("CN", "CT", "CSiU", "SECS", "BN","Mitoses", "Class")]
subset2<-subset(subset1,subset1$CT>=7 ,select=c("CN","CT", "Mitoses", "CSiU", "SECS", "Class"))
head(subset2)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
#load library reshape2
library(reshape2)
#get working directory
getwd()
#set working directory
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\Facebook")
getwd()
#mport dataset
df<-read.csv("dataset_Facebook.csv",sep = ';')#import csv file
dim(df)         # View Dataframe dimensions
print(names(df))
head(df)
#create subset
subset<-df[c("Page.total.likes","Type","Category","comment","like","share")]
head(subset)
#create subset
subset1<-df[c("Page.total.likes","Type","Post.Month","Post.Weekday","Post.Hour","like","comment","share")]
head(subset1)
#create subset
subset2<-subset(subset1,subset1$Type=="Photo" ,select=c(Page.total.likes,Post.Weekday,like,comment,share))
head(subset2)
#merging of subsets
merged<-merge(subset,subset2,by="Page.total.likes")
head(head(merged))
#sorting of data
sortdf<-df[order(df$Page.total.likes),]
head(sortdf)
#transpose
transposedf = t(df)
head(transposedf)
#Melt
meltData<-melt(data=df,id.vars="Lifetime.Engaged.Users",measure.vars=c("Total.Interactions"))
head(meltData)
#cast
castData<-acast(data=meltData,Lifetime.Engaged.Users~variable,mean)
head(castData)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
#load library reshape2
library(reshape2)
#get working directory
getwd()
#set working directory
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\Facebook")
getwd()
#mport dataset
df<-read.csv("dataset_Facebook.csv",sep = ';')#import csv file
dim(df)         # View Dataframe dimensions
print(names(df))
head(df)
#create subset
subset<-df[c("Page.total.likes","Type","Category","comment","like","share")]
head(subset)
#create subset
subset1<-df[c("Page.total.likes","Type","Post.Month","Post.Weekday","Post.Hour","like","comment","share")]
head(subset1)
#create subset
subset2<-subset(subset1,subset1$Type=="Photo" ,select=c(Page.total.likes,Post.Weekday,like,comment,share))
head(subset2)
#merging of subsets
merged<-merge(subset,subset2,by="Page.total.likes")
head(head(merged))
#sorting of data
sortdf<-df[order(df$Page.total.likes),]
head(sortdf)
#transpose
transposedf = t(df)
View(transposedf)
#Melt
meltData<-melt(data=df,id.vars="Lifetime.Engaged.Users",measure.vars=c("Total.Interactions"))
head(meltData)
#cast
castData<-acast(data=meltData,Lifetime.Engaged.Users~variable,mean)
head(castData)
####################################################################################
# Author - Omkar Deshpande (33213 - K10)
#
# Problem statement - Perform the following operations using R/Python on the Air quality and Heart Diseases data sets
#               a. Data cleaning
#               b. Data integration
#               c. Data transformation
#               d. Error correcting
#               e. Data model building
#####################################################################################
library(reshape2)      #load library reshape2
#get working directory
getwd()
#set working directory
setwd("P:\\TE_SEM_6\\SL-VI-33213\\Assignment 5\\breastcancer")
getwd()
#import dataset without first line as header
df<-read.csv("BreastCancerWc.csv", header=FALSE)
#assign names to columns
names(df)<-c("CN", "CT", "CSiU", "CShU", "MA", "SECS", "BN", "BC", "NN", "Mitoses", "Class")
print(dim(df))     # print Dataframe dimensions
print(names(df))    #print column names
df$Class[df$Class==4] <- 1 # replace 4 with 1
df$Class[df$Class==2] <- 0 # replace 2 with 0
df$BN[df$BN=="?"]<-NA   #replacing ? by NA
head(table(df$BN))
df$BN[is.na(df$BN)]<-1  #replacing NA with 1
head(table(df$BN))
#converting string to numeric
df$BN <- as.numeric(df$BN)
head(df)
# Subset of Dataframe
subset <- df[c("CN", "CT", "CSiU","Mitoses", "Class")]
head(subset)
# Conditional Subset of Dataframe
subset1<-df[c("CN", "CT", "CSiU", "SECS", "BN","Mitoses", "Class")]
subset2<-subset(subset1,subset1$CT>=7 ,select=c("CN","CT", "Mitoses", "CSiU", "SECS", "Class"))
head(subset2)
# Merging Dataframe
merged1<-merge(subset1,subset2,by="CN")
head(merged1)
dim(subset1)
dim(subset2)
dim(merged1)
merged2<-merge(subset1,subset2,by="CT")
head(merged2)
dim(subset1)
dim(subset2)
dim(merged2)
sortdf<-df[order(df$CT, df$Mitoses),]       # Sorting Dataframe
head(sortdf)
transposedf = t(df)        #transpose
head(transposedf)
Data1<-melt(data=df,id=c("CN", "Class"))     # Melting
View(Data1)
Data2<-melt(data=df,id=c("CN", "Class"),measure=c("Mitoses"))
View(Data2)
Data<-dcast(data=Data1,CN+Class~variable,mean)     # Casting
View(Data)
View(subset1)
